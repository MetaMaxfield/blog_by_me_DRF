"""
Django settings for blog_by_me_DRF project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from typing import TypeVar

from django.db.models import Model
from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Настройка конфигурации логирования для управления логами проекта
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'user_commands.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'common': {
            'handlers': [
                'file',
            ],
            'level': 'WARNING',
            'propagate': False,
        },
    },
}


# Имена хоста / домена, которые может обслуживать этот сайт Django
ALLOWED_HOSTS = [
    # '127.0.0.1'
]


# Application definition
INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'debug_toolbar',
    'taggit',
    'phonenumber_field',
    'ckeditor',
    'ckeditor_uploader',
    'blog',
    'company',
    'common',
    'users',
]


# Список используемого промежуточного программного обеспечения
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'blog_by_me_DRF.middleware.ForceInRussian',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]


# Полный путь импорта Python к корневому URLconf
ROOT_URLCONF = 'blog_by_me_DRF.urls'


# Настройки для всех шаблонизаторов
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Путь Python к объекту приложения WSGI
WSGI_APPLICATION = 'blog_by_me_DRF.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('KEY_DATABASES_NAME'),
        'USER': os.getenv('KEY_DATABASES_USER'),
        'PASSWORD': os.getenv('KEY_DATABASES_PASSWORD'),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Модель для представления пользователя
AUTH_USER_MODEL = 'users.User'


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = 'ru-ru'


# Часовой пояс для этого подключения к базе данных
TIME_ZONE = 'Europe/Saratov'


# Логическое значение, указывающее включение системы перевода Django
USE_I18N = True


# Список всех доступных языков
# Порядок языков в LANGUAGES важен: значения языков используются в логике работы кода
# Не изменяйте порядок элементов в кортеже
LANGUAGES = (
    ('ru', _('Русский')),
    ('en', _('English')),
)


# Путь Python к файлам локализации
LOCALE_PATHS = (os.path.join(BASE_DIR, 'locale/'),)


# Логическое значение, учитывающее часовой пояс
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [STATIC_DIR]
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# URL-адрес, с которого обрабатываются мультимедийные данные MEDIA_ROOT
MEDIA_URL = '/media/'


# Путь файловой системы к каталогу с файлами, загруженными пользователем
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Целочисленный идентификатор текущего сайта в django_site таблице базы данных
SITE_ID = 1


# Проверка наличия файла .env для первого запуска интерпретатора Python и генерации SECRET_KEY
if os.path.isfile(os.path.join(os.path.dirname(os.path.dirname(__file__)), '.env')):
    # Ключи для работы reCAPTCHA
    RECAPTCHA_PUBLIC_KEY = os.getenv('ENV_RECAPTCHA_PUBLIC_KEY')
    RECAPTCHA_PRIVATE_KEY = os.getenv('ENV_RECAPTCHA_PRIVATE_KEY')


# Список IP-адресов для отдельных функций
INTERNAL_IPS = [
    "127.0.0.1",
]


# Ключи для кэширования данных (функция get_cached_objects_or_queryset)
# и определения необходимого запроса к БД (функция qs_definition)
KEY_POSTS_LIST = os.getenv('KEY_POSTS_LIST')
KEY_POST_DETAIL = os.getenv('KEY_POST_DETAIL')
KEY_CATEGORIES_LIST = os.getenv('KEY_CATEGORIES_LIST')
KEY_VIDEOS_LIST = os.getenv('KEY_VIDEOS_LIST')
KEY_ABOUT = os.getenv('KEY_ABOUT')
KEY_AUTHORS_LIST = os.getenv('KEY_AUTHORS_LIST')
KEY_AUTHOR_DETAIL = os.getenv('KEY_AUTHOR_DETAIL')
KEY_TOP_POSTS = os.getenv('KEY_TOP_POSTS')
KEY_LAST_POSTS = os.getenv('KEY_LAST_POSTS')
KEY_ALL_TAGS = os.getenv('KEY_ALL_TAGS')
KEY_POSTS_CALENDAR = os.getenv('KEY_POSTS_CALENDAR')


# Ключ-префикс для других ключей
CACHE_KEY = os.getenv('CACHE_KEY')


# Настройки кэша
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
        'LOCATION': '127.0.0.1:11211',
    }
}


# Время кэширования для разных типов данных
CACHE_TIMES = {
    KEY_POSTS_LIST: 300,  # 5 минут для списка постов
    KEY_POST_DETAIL: 600,  # 10 минут для отдельного поста
    KEY_CATEGORIES_LIST: 3600,  # 1 час для списка категорий
    KEY_VIDEOS_LIST: 600,  # 10 минут для списка видеозаписей
    KEY_ABOUT: 86400,  # 1 день для информации о компании
    KEY_AUTHORS_LIST: 3600,  # 1 час для списка авторов
    KEY_AUTHOR_DETAIL: 600,  # 10 минут для отдельного автора
    KEY_TOP_POSTS: 900,  # 15 минут для трёх самых популярных постов
    KEY_LAST_POSTS: 300,  # 5 минут для трёх последних постов
    KEY_ALL_TAGS: 1800,  # 30 миннут для десяти популярных тегов
    KEY_POSTS_CALENDAR: 3600,  # 1 час для списка с днями публикации постов
}


# Настроки для работы SMTP сервера
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER_KEY')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD_KEY')
EMAIL_PORT = 587
EMAIL_USE_TLS = True


# Путь к каталогу загрузки мультимедиа CKEditor
CKEDITOR_UPLOAD_PATH = "uploads/"


# Настройки CKEditor
CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        # 'skin': 'office2013',
        'toolbar_Basic': [['Source', '-', 'Bold', 'Italic']],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {
                'name': 'forms',
                'items': [
                    'Form',
                    'Checkbox',
                    'Radio',
                    'TextField',
                    'Textarea',
                    'Select',
                    'Button',
                    'ImageButton',
                    'HiddenField',
                ],
            },
            '/',
            {
                'name': 'basicstyles',
                'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'],
            },
            {
                'name': 'paragraph',
                'items': [
                    'NumberedList',
                    'BulletedList',
                    '-',
                    'Outdent',
                    'Indent',
                    '-',
                    'Blockquote',
                    'CreateDiv',
                    '-',
                    'JustifyLeft',
                    'JustifyCenter',
                    'JustifyRight',
                    'JustifyBlock',
                    '-',
                    'BidiLtr',
                    'BidiRtl',
                    'Language',
                ],
            },
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {
                'name': 'insert',
                'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'],
            },
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {
                'name': 'yourcustomtools',
                'items': [
                    # put the name of your editor.ui.addButton here
                    'Preview',
                    'Maximize',
                    'Youtube',
                ],
            },
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # 'height': 291,
        # 'width': '100%',
        # 'filebrowserWindowHeight': 725,
        # 'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join(
            [
                'uploadimage',  # the upload image feature
                # your extra plugins here
                'div',
                'autolink',
                'autoembed',
                'embedsemantic',
                'autogrow',
                # 'devtools',
                'widget',
                'lineutils',
                'clipboard',
                'dialog',
                'dialogui',
                'elementspath',
                'youtube',
            ]
        ),
    }
}


# Названия групп пользователей
TITLE_MODERATOR_GROUP = _('Модератор')
TITLE_AUTHOR_GROUP = _('Автор')


# Названия оценок для рейтинга постов
TITLE_LIKE_MARK = 'Лайк'
TITLE_DISLIKE_MARK = 'Дизлайк'


# Настройка библиотеки "django-taggit" для игнорирования регистра в тегах
TAGGIT_CASE_INSENSITIVE = True


# Общая аннотация для объектов, наследуемых от базовой модели Django
ObjectModel = TypeVar('ObjectModel', bound=Model)
